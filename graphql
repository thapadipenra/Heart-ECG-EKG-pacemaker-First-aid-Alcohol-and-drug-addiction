GraphQl
-graphQl-querylanguage-gives power to client ask for exactly what they need—graphql prevents overFetching.
-REST hit particular endpoint where GraphQl we define structure—of data we want.
-GraphQl advantage 1>prevents over-fetching 2>also prevents under-fetching by relating data using relation.
-GraphQl - - strictly typed.
-GraphQl - - uses Data structure called graph data structure - -to link node together with relation(association) like 1-many. NODE=product/user/etc. interconnecting node with graph Data Structure & querying so…intros way we design graphQL SCHEMA NESTING REFRaNCE TO OTHER RELATED NODES.
-Let’s- graphQl API.
What library to use for graphQL client side and server side https://graphql.org/code/#javascript.
There are many library only you use Apollo server in node side and Apollo client in client side.
NPM init -Y, NPM install Apollo-server grapnel, Here graphQl helps in run our graphQl query and mutation.
Specifying type definition(schema ==typeDefs), resolvers.
Hello: String! === Scalar Type, property returning non nullable string.
We can return either Scalar type or object type.
Scalar type are String,Int, Float, Boolean, ID(unique identifier for specific record), ID used every time when there is arguments in properties comes from client.
—Return array of scalar types. Specify we want nullable or non -nullable fields.==null. specify(bang=explaination mark =non-nullable).
—Return array of object type.
How to query category and associated products:1 - many.
Each resolver we have to go ahead and import data from db.js but if we supply data as context parameter it will be avail throughout application
If module.exports={a:”dip”,b:”pen”};
Const {a: an, d: dn}=require(“./index”); then an, dn are new alias.
In API building filtering eg product based on rating only do >= given rating, don’t overdo as no-one will filter <=,< etc. similarly we don’t filter for false onSale value.
Only fulfill user requirement not overdo.

Graphql(this lecturer make explanation video on canvas free)
Prisma wraps up our database and exposes it as grapnel api.
It looks like client has direct access to database.
client(operation, query) does not need to write or change by node as same query works for prism. Only during mutation auth and authority comes for node.
Mutation =similar to your DNA changing
Deletion operation if product deleted so reviews need to delete too so think references.
Cascade and delete or keep the other referenced node.
Designing the graphQl Api SHOPIFY == important many don’t care but it makes you better gQl dev.
READ : https://github.com/Shopify/graphql-design-tutorial/blob/master/TUTORIAL.md
http://spec.graphql.org/draft/#sec-Response
Facebook.github.io/graphql
